/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.regionaltrade.view;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.print.PrinterException;
import java.text.MessageFormat;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Cristian
 */
public class TablePreventive extends javax.swing.JFrame {

    /**
     * Creates new form TablePreventive
     */
    public TablePreventive() {
        if(modelTable.getRowCount()==0){
            JOptionPane.showMessageDialog(null,"Este equipo no tiene preventivos registrado");
            return;
        }
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Listado Preventivos");
        setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
        jTable1.setFont(new Font("Times New Roman", Font.BOLD, 16));
        
        RowSorter<TableModel> sorter = new TableRowSorter<>(modelTable);
       
        jTable1.setRowSorter(sorter);
        
        jTable1.getRowSorter().toggleSortOrder(2);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        
        jButtonPrint.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                
                utilJTablePrint(jTable1, "Listado Preventivos", "Regional Trade", true);
            }
        
        
        
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanelButton = new javax.swing.JPanel();
        jButtonPrint = new javax.swing.JButton();
        jPanelTitle = new javax.swing.JPanel();
        jLabelTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(900, 540));

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTable1.setModel(modelTable);
        jTable1.setRowHeight(22);
        jTable1.setRowMargin(5);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jButtonPrint.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jButtonPrint.setText("Imprimir Tabla");
        jPanelButton.add(jButtonPrint);

        getContentPane().add(jPanelButton, java.awt.BorderLayout.PAGE_END);

        jLabelTitle.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabelTitle.setText("Historial Preventivos");
        jPanelTitle.add(jLabelTitle);

        getContentPane().add(jPanelTitle, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

      
    private final ModelTablePreventive modelTable = new ModelTablePreventive();
    
    private void utilJTablePrint(JTable jTable, String header, String footer, boolean showPrintDialog){        
    boolean fitWidth = true;        
    boolean interactive = true;
    // We define the print mode (Definimos el modo de impresión)
    JTable.PrintMode mode = fitWidth ? JTable.PrintMode.FIT_WIDTH : JTable.PrintMode.NORMAL;
    try {
        // Print the table (Imprimo la tabla)             
        boolean complete = jTable.print(mode,
                new MessageFormat(header),
                new MessageFormat(footer),
                showPrintDialog,
                null,
                interactive);                 
        if (complete) {
            // Mostramos el mensaje de impresión existosa
            JOptionPane.showMessageDialog(jTable,
                    "Impresión completa",
                    "Resultado de la impresión",
                    JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Mostramos un mensaje indicando que la impresión fue cancelada                 
            JOptionPane.showMessageDialog(jTable,
                    "Impresión cancelada",
                    "Resultado de la impresión",
                    JOptionPane.WARNING_MESSAGE);
        }
    } catch (PrinterException pe) {
        JOptionPane.showMessageDialog(jTable, 
                "Fallo de impresión" + pe.getMessage(), 
                "Resultado de la impresión", 
                JOptionPane.ERROR_MESSAGE);
    }
}
    
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonPrint;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JPanel jPanelButton;
    private javax.swing.JPanel jPanelTitle;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
